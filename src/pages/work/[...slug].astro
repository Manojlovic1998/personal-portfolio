---
import { type CollectionEntry, getCollection } from "astro:content";

import BaseLayout from "../../layouts/BaseLayout.astro";

import Hero from "../../components/Hero.astro";
import Icon from "../../components/Icon.astro";
import Chip from "../../components/Chip.astro";
import Link from "../../components/Link.astro";

interface Props {
  entry: CollectionEntry<"work">;
}

// This is a dynamic route that generates a page for every Markdown file in src/content/
// Read more about dynamic routes and this `getStaticPaths` function in the Astro docs:
// https://docs.astro.build/en/core-concepts/routing/#dynamic-routes
export async function getStaticPaths() {
  const work = await getCollection("work");
  return work.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await entry.render();
---

<BaseLayout title={entry.data.title} description={entry.data.description}>
  <div class="max-w-[1290px] w-full wrapper px-6">
    <!-- Page Hero Section -->
    <header
      class="container w-full border-hero-primary/70 dark:border-hero-primary-dark/[16%] border-b pb-8"
    >
      <Link
        href={`${import.meta.env.BASE_URL}work`}
        type="primary"
        className={"mb-2 hidden md:inline-flex"}
      >
        <Icon icon="arrow-left" color="stroke-icon-primary" size="1rem" /> Work
      </Link>
      <Hero title={entry.data.title}>
        <div class="mt-3">
          <div class="flex gap-2 justify-center md:justify-start flex-wrap">
            {entry.data.tags.map((t) => <Chip type="primary">{t}</Chip>)}
          </div>
          <p
            class="block text-center md:hidden mt-4 text-lg font-medium text-skin-muted dark:text-skin-muted-dark"
          >
            {entry.data.description}
          </p>
        </div>
      </Hero>
    </header>
    <!-- Main Page Content -->
    <main class="max-w-3xl mx-auto w-full pb-16 space-y-10">
      {
        entry.data.img && (
          <img
            src={`${import.meta.env.BASE_URL}${entry.data.img}`}
            alt={entry.data.img_alt || ""}
            class="mx-auto mt-10"
          />
        )
      }
      <div class="space-y-3.5 dark:text-skin-base-dark text-lg">
        <Content class="" />
      </div>
    </main>
  </div>
</BaseLayout>

<style>
  .wrapper :global(blockquote) {
    font-size: var(--text-2xl);
    line-height: var(--text-2xl-line-height);
    font-weight: var(--text-bold);
    padding-inline-start: 1.5rem;
    border-inline-start: 0.25rem solid
      rgb(var(--color-border-fill-blockquote-primary));
    color: var(--color-text-base);
  }

  :root.dark .wrapper :global(blockquote) {
    border-inline-start: 0.25rem solid
      rgb(var(--color-border-fill-blockquote-primary-dark));
    color: rgb(var(--color-text-base-dark));
  }

  .wrapper :global(a) {
    color: rgb(var(--color-link-text-primary));
    font-weight: var(--text-bold);
  }

  .wrapper :global(a:hover) {
    color: rgb(var(--color-link-text-primary-hover));
    transition: color 0.2s ease-in-out;
  }

  .wrapper :global(img) {
    border-radius: 1.5rem;
    border: 1px solid var(--gray-800);
  }

  @media (min-width: 768px) {
    .wrapper :global(blockquote) {
      font-size: var(--text-3xl);
      line-height: var(--text-3xl-line-height);
      font-weight: var(--text-bold);
      padding-inline-start: 1.5rem;
      border-inline-start: 0.25rem solid
        rgb(var(--color-border-fill-blockquote-primary));
      color: var(--color-text-base);
    }
  }
</style>
