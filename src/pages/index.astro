---
import { getCollection } from "astro:content";

// Layout import â€” provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from "../layouts/BaseLayout.astro";

// Component Imports
import CallToAction from "../components/CallToAction.astro";
import Grid from "../components/Grid.astro";
import Hero from "../components/Hero.astro";
import Icon from "../components/Icon.astro";
import Chip from "../components/Chip.astro";
import PortfolioPreview from "../components/PortfolioPreview.astro";
import BlogCard from "../components/BlogCard.astro";

// Page section components
import Skills from "../components/Skills.astro";

type blogPost = {
  title: string;
  brief: string;
  coverImage: string;
  dateAdded: string;
  slug: string;
};

// Content Fetching: List four most recent work projects
const projects = (await getCollection("work"))
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
  .slice(0, 4);

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/

const fetchHashnodePosts = async (username: string) => {
  const graphqlUri = "https://api.hashnode.com/";

  const requestPayload = {
    query: `
      query GetUserArticles($page: Int!){
        user(username: "${username}") {
          name
          publication {
            posts(page: $page) {
              title
              brief
              coverImage
              dateAdded
              slug
            }
          }
        }
      }
   `,
    variables: {
      page: 0,
    },
  };

  const httpsRequest = {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify({ ...requestPayload }),
  };
  const resPayload = await fetch(graphqlUri, httpsRequest);
  if (resPayload.status == 200) {
    const resData = await resPayload.json();
    return resData;
  } else {
    console.error(
      `Requesting posts from Hashnode has resulted in '${resPayload.statusText}' status code.`
    );
  }
};

const { data } = await fetchHashnodePosts("manojlovic1998");

const blogPosts: blogPost[] = data.user.publication.posts;
---

<BaseLayout>
  <div class="flex flex-col max-w-[1290px] gap-16 mt-16 content-center">
    <header class="flex flex-col gap-8 md:flex-row content-center items-center">
      <Hero
        title="Hello, my name is Nemanja Manojlovic"
        tagline="I am a Software Engineer who is currently based in Stockholm, Sweden."
      >
        <div class="roles">
          <Chip type="primary">
            <Icon icon="code" size="1.33em" color="stroke-icon-inverted" /> Software
            Engineer
          </Chip>
          <Chip type="primary">
            <Icon
              icon="pencil-line"
              size="1.33em"
              color="stroke-nav-icon-inverted"
            /> Writer
          </Chip>
        </div>
      </Hero>

      <img
        alt="Nemanja Manojlovic smiling in a winter jacket."
        width="340"
        height="494"
        class="rounded-lg md:ml-auto"
        src={`${import.meta.env.BASE_URL}assets/portrait.webp`}
      />
    </header>

    <Skills />
    <main class="container mx-auto flex flex-col gap-32">
      <!-- Selected Work -->
      <section class="md:grid grid-flow-row auto-rows-auto grid-cols-2">
        <header class="text-center md:text-start col-span-1">
          <h3
            class="text-5xl font-bold text-skin-base dark:text-skin-base-dark"
          >
            Selected Work
          </h3>
          <p
            class="text-skin-muted dark:text-skin-muted-dark text-2xl font-medium max-w-[660px] mt-4"
          >
            Take a look below at some of my featured work for clients from the
            past few years.
          </p>
        </header>

        <div class="md:block md:col-span-2 md:grid-rows-2 md:row-start-2 mt-16">
          <Grid className="flex flex-col gap-20 md:gap-0 md:grid">
            {
              projects.map((project) => (
                <li class="col-span-2 odd:place-self-end  bg-card-primary dark:bg-card-primary-dark/[16%] border border-card-primary dark:border-card-primary-dark/[8%] rounded-lg w-full md:w-1/2 min-h-[300px] md:max-w-[600px] backdrop-blur-sm flex">
                  <PortfolioPreview project={project} />
                </li>
              ))
            }
          </Grid>
        </div>

        <div class="flex md:block md:col-span-2 md:col-start-2 md:row-start-1">
          <CallToAction
            href={`${import.meta.env.BASE_URL}work/`}
            className="mx-auto md:ml-auto md:mr-0 mt-11"
          >
            <Icon
              icon="arrow-right"
              size="1.2em"
              color="stroke-icon-inverted"
            />
            View All
          </CallToAction>
        </div>
      </section>
      <!-- Blog Posts -->
      <section class="md:grid grid-flow-row auto-rows-auto grid-cols-2">
        <header class="text-center md:text-start col-span-1">
          <h3
            class="text-5xl font-bold text-skin-base dark:text-skin-base-dark"
          >
            Blog Posts
          </h3>
          <p
            class="text-skin-muted dark:text-skin-muted-dark text-2xl font-medium max-w-[660px] mt-4"
          >
            Occasionally I write tech blog posts, feel free to check them out.
          </p>
        </header>

        <div class="gallery md:block md:col-span-2 md:row-start-2 mt-16">
          <Grid className="grid-cols-3 place-items-center gap-20 md:gap-5">
            {
              blogPosts.map((post) => (
                <>
                  <li class="col-span-3 md:col-span-1 max-w-[343px]">
                    <BlogCard {...post} />
                  </li>
                </>
              ))
            }
          </Grid>
        </div>

        <div class="flex md:block md:col-span-2 md:col-start-2 md:row-start-1">
          <CallToAction
            href={"https://blog.nemanjamanojlovic.com/"}
            target={"_blank"}
            className="mx-auto md:ml-auto md:mr-0 mt-11"
          >
            <Icon
              icon="arrow-right"
              size="1.2em"
              color="stroke-icon-inverted"
            />
            View All
          </CallToAction>
        </div>
      </section>
      <!-- My Hobbies -->
      <section class="flex flex-col">
        <header class="text-center md:text-start">
          <h3
            class="text-5xl font-bold text-skin-base dark:text-skin-base-dark"
          >
            My Hobbies
          </h3>
          <p
            class="text-skin-muted dark:text-skin-muted-dark text-2xl font-medium max-w-[660px] mt-4"
          >
            My hobbies are designing logos, illustrations, and user interfaces,
            hobbyist photography, thinkering with electronics and spending time
            with dogs.
          </p>
        </header>
        <div class="gallery photo-gallery">
          <div class="gallery-column">
            <img
              src={`${import.meta.env.BASE_URL}assets/dog-photo3.webp`}
              alt=""
            />
            <img
              src={`${import.meta.env.BASE_URL}assets/dog-photo2.webp`}
              alt=""
            />
          </div>
          <div class="gallery-column">
            <img
              src={`${import.meta.env.BASE_URL}assets/photography1.webp`}
              alt=""
            />
            <img
              class="photo-end-row"
              src={`${import.meta.env.BASE_URL}assets/photography2.webp`}
              alt=""
            />
          </div>
          <div class="gallery-column">
            <img
              src={`${import.meta.env.BASE_URL}assets/photography4.webp`}
              alt=""
            />
            <img
              src={`${import.meta.env.BASE_URL}assets/photography3.webp`}
              class="photo-full-row"
              alt=""
            />
            <img
              src={`${import.meta.env.BASE_URL}assets/photography5.webp`}
              alt=""
            />
          </div>
          <div class="gallery-column">
            <img
              src={`${import.meta.env.BASE_URL}assets/photography6.webp`}
              alt=""
            />
            <img
              src={`${import.meta.env.BASE_URL}assets/dog-photo4.webp`}
              alt=""
            />
          </div>
        </div>
      </section>
    </main>
  </div>
</BaseLayout>

<style>
  .roles {
    display: none;
  }

  @media (min-width: 50em) {
    .roles {
      margin-top: 0.5rem;
      display: flex;
      gap: 0.5rem;
    }
  }

  /* ====================================================== */

  .section {
    display: grid;
    gap: 2rem;
  }

  .section-header {
    justify-self: center;
    text-align: center;
    max-width: 50ch;
    font-size: var(--text-md);
    color: var(--gray-300);
  }

  .section-header h3 {
    font-size: var(--text-2xl);
  }

  .photo-gallery {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-auto-flow: dense;
    gap: 1rem;
  }

  .gallery-column {
    display: contents;
  }

  .photo-end-row {
    grid-row-start: 5;
  }

  .photo-full-row {
    grid-column-start: 1;
    grid-column-end: 3;
  }

  @media (min-width: 50em) {
    .section {
      grid-template-columns: repeat(4, 1fr);
      grid-template-areas: "header header header header" "gallery gallery gallery gallery";
      gap: 5rem;
    }

    .section.with-cta {
      grid-template-areas: "header header header cta" "gallery gallery gallery gallery";
    }

    .section-header {
      grid-area: header;
      font-size: var(--text-lg);
    }

    .section-header h3 {
      font-size: var(--text-4xl);
    }

    .with-cta .section-header {
      justify-self: flex-start;
      text-align: left;
    }

    .photo-gallery {
      display: flex;
    }

    .gallery {
      grid-area: gallery;
    }

    .gallery-column {
      flex: 25%;
      max-width: 25%;
      padding: 0 4px;
      align-self: center;
      display: flex;
      flex-direction: column;
    }

    .gallery-column img {
      margin-top: 8px;
      vertical-align: middle;
      widows: 100%;
    }

    .cta {
      grid-area: cta;
    }
  }

  /* ====================================================== */

  .mention-card {
    display: flex;
    height: 7rem;
    justify-content: center;
    align-items: center;
    text-align: center;
    border: 1px solid var(--gray-800);
    border-radius: 1.5rem;
    color: var(--gray-300);
    background: var(--gradient-subtle);
    box-shadow: var(--shadow-sm);
  }

  @media (min-width: 50em) {
    .mention-card {
      border-radius: 1.5rem;
      height: 9.5rem;
    }
  }
</style>
