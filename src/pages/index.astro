---
import { getCollection } from "astro:content";
import type { TypedDocumentNode } from "@graphql-typed-document-node/core";
import { GraphQLClient, gql } from "graphql-request";
import { parse } from "graphql";

// Layout import â€” provides basic page elements: <head>, <nav>, <footer> etc.
import BaseLayout from "../layouts/BaseLayout.astro";

// Component Imports
import CallToAction from "../components/CallToAction.astro";
import Grid from "../components/Grid.astro";
import Hero from "../components/Hero.astro";
import Icon from "../components/Icon.astro";
import Chip from "../components/Chip.astro";
import PortfolioPreview from "../components/PortfolioPreview.astro";
import BlogCard from "../components/BlogCard.astro";

// Page section components
import Skills from "../components/Skills.astro";
import Avatar3D from "../components/Avatar3D.astro";

type blogPost = {
  title: string;
  brief: string;
  coverImage: string;
  dateAdded: string;
  slug: string;
};

// Content Fetching: List four most recent work projects
const projects = (await getCollection("work"))
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
  .slice(0, 4);

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/

const fetchHashnodePosts = async (username: string) => {
  const graphqlUri = "https://gql.hashnode.com";

  const client = new GraphQLClient(graphqlUri);

  const query: TypedDocumentNode<{
    publication: {
      posts: {
        edges: {
          node: {
            title: string;
            brief: string;
            coverImage: {
              url: string;
            };
            slug: string;
            publishedAt: string;
          };
        }[];
      };
    };
  }> = parse(gql`
    query GetUserArticles {
      publication(host: "blog.nemanjamanojlovic.com") {
        posts(first: 20) {
          edges {
            node {
              title
              brief
              coverImage {
                url
              }
              slug
              publishedAt
            }
          }
        }
      }
    }
  `);
  try {
    const allPosts = await client.request(query);

    return allPosts.publication.posts.edges;
  } catch (error) {
    console.error(error);
  }
};

const blogPosts = await fetchHashnodePosts("manojlovic1998");
---

<BaseLayout image={`${import.meta.env.BASE_URL}assets/open-graph/index.webp`}>
  <div
    class="flex flex-col max-w-full md:max-w-[1290px] gap-32 mt-16 content-center px-6"
  >
    <header
      class="flex flex-col gap-8 md:flex-row content-center items-center min-h-[494px] relative z-3"
    >
      <Hero
        title="Hello, my name is Nemanja Manojlovic"
        tagline="I am a Software Engineer who is currently based in Stockholm, Sweden."
        className="md:w-1/2"
      >
        <div class="flex gap-2 justify-center md:justify-start">
          <Chip type="primary" className="animate">
            <Icon icon="code" size="1.33em" color="stroke-icon-inverted" />
             Software Engineer
          </Chip>
          <Chip type="primary" className="animate delay-1">
            <Icon
              icon="pencil-line"
              size="1.33em"
              color="stroke-nav-icon-inverted"
            /> Writer
          </Chip>
        </div>
      </Hero>
      <Avatar3D />
    </header>
    <Skills />

    <main class="container mx-auto flex flex-col gap-32 pb-32 with-background">
      <!-- Selected Work -->
      <section class="md:grid grid-flow-row auto-rows-auto grid-cols-2">
        <header class="text-center md:text-start col-span-1">
          <h3
            class="text-5xl font-bold text-skin-base dark:text-skin-base-dark animate"
          >
            Selected Work
          </h3>
          <p
            class="text-skin-muted dark:text-skin-muted-dark text-2xl font-medium max-w-[660px] mt-4 animate"
          >
            Take a look below at some of my featured work for clients from the
            past few years.
          </p>
        </header>

        <div class="md:block md:col-span-2 md:grid-rows-2 md:row-start-2 mt-16">
          <Grid className="flex flex-col gap-20 md:gap-6 md:grid">
            {
              projects.map((project) => (
                <li class="col-span-2 odd:place-self-end  bg-card-primary/[50%] dark:bg-card-primary-dark/[16%] border border-card-primary dark:border-card-primary-dark/[8%] rounded-lg w-full md:w-1/2 min-h-[300px] md:max-w-[600px] backdrop-blur-sm flex animate">
                  <PortfolioPreview project={project} />
                </li>
              ))
            }
          </Grid>
        </div>

        <div class="flex md:block md:col-span-2 md:col-start-2 md:row-start-1">
          <CallToAction
            href={`${import.meta.env.BASE_URL}work/`}
            className="mx-auto md:ml-auto md:mr-0 mt-11 animate"
          >
            <Icon
              icon="arrow-right"
              size="1.2em"
              color="stroke-icon-inverted"
            />
             View All
          </CallToAction>
        </div>
      </section>
      <!-- Blog Posts -->
      <section class="md:grid grid-flow-row auto-rows-auto grid-cols-2">
        <header class="text-center md:text-start col-span-1">
          <h3
            class="text-5xl font-bold text-skin-base dark:text-skin-base-dark animate"
          >
            Blog Posts
          </h3>
          <p
            class="text-skin-muted dark:text-skin-muted-dark text-2xl font-medium max-w-[660px] mt-4 animate"
          >
            Occasionally I write tech blog posts, feel free to check them out.
          </p>
        </header>

        <div class="md:block md:col-span-2 md:row-start-2 mt-16">
          <Grid className="grid-cols-3 place-items-center gap-20 md:gap-5">
            {
              blogPosts &&
                blogPosts.map((post) => (
                  <>
                    <li class="col-span-3 md:col-span-1 max-w-[343px] animate">
                      <BlogCard {...post.node} />
                    </li>
                  </>
                ))
            }
          </Grid>
        </div>

        <div class="flex md:block md:col-span-2 md:col-start-2 md:row-start-1">
          <CallToAction
            href={"https://blog.nemanjamanojlovic.com/"}
            target={"_blank"}
            className="mx-auto md:ml-auto md:mr-0 mt-11 animate"
          >
            <Icon
              icon="arrow-right"
              size="1.2em"
              color="stroke-icon-inverted"
            />
             View All
          </CallToAction>
        </div>
      </section>
      <!-- My Hobbies -->
      <section class="flex flex-col gap-16">
        <header class="text-center">
          <h3
            class="text-5xl font-bold text-skin-base dark:text-skin-base-dark animate"
          >
            My Hobbies
          </h3>
          <p
            class="text-skin-muted dark:text-skin-muted-dark text-2xl font-medium max-w-[660px] mx-auto mt-4 animate"
          >
            My hobbies are designing logos, illustrations, and user interfaces,
            hobbyist photography, thinkering with electronics and spending time
            with dogs.
          </p>
        </header>
        <div
          class="grid grid-cols-2 grid-flow-dense gap-4 md:flex md:items-center"
        >
          <div
            class="contents md:flex md:basis-1/4 md:max-w-[25%] md:items-center md:flex-col md:px-1"
          >
            <img
              src={`${import.meta.env.BASE_URL}assets/dog-photo3.webp`}
              class="md:align-middle md:mt-2 animate"
              loading="lazy"
              alt=""
            />
            <img
              src={`${import.meta.env.BASE_URL}assets/dog-photo2.webp`}
              class="md:align-middle md:mt-2 animate"
              loading="lazy"
              alt=""
            />
          </div>
          <div
            class="contents md:flex md:basis-1/4 md:max-w-[25%] md:items-center md:flex-col md:px-1"
          >
            <img
              src={`${import.meta.env.BASE_URL}assets/photography1.webp`}
              class="md:align-middle md:mt-2 animate"
              loading="lazy"
              alt=""
            />
            <img
              class="photo-end-row row-start-5 md:align-middle md:mt-2 animate"
              src={`${import.meta.env.BASE_URL}assets/photography2.webp`}
              loading="lazy"
              alt=""
            />
          </div>
          <div
            class="contents md:flex md:basis-1/4 md:max-w-[25%] md:items-center md:flex-col md:px-1"
          >
            <img
              src={`${import.meta.env.BASE_URL}assets/photography4.webp`}
              class="md:align-middle md:mt-2 animate"
              loading="lazy"
              alt=""
            />
            <img
              src={`${import.meta.env.BASE_URL}assets/photography3.webp`}
              class="col-start-1 col-end-3 md:basis-1/4 md:align-middle md:mt-2 animate"
              loading="lazy"
              alt=""
            />
            <img
              src={`${import.meta.env.BASE_URL}assets/photography5.webp`}
              class="md:align-middle md:mt-2 animate"
              loading="lazy"
              alt=""
            />
          </div>
          <div
            class="contents md:flex md:basis-1/4 md:max-w-[25%] md:items-center md:flex-col md:px-1 gr"
          >
            <img
              src={`${import.meta.env.BASE_URL}assets/photography6.webp`}
              class="md:align-middle md:mt-2 animate"
              loading="lazy"
              alt=""
            />
            <img
              src={`${import.meta.env.BASE_URL}assets/dog-photo4.webp`}
              class="md:align-middle md:mt-2 animate"
              loading="lazy"
              alt=""
            />
          </div>
        </div>
      </section>
    </main>
  </div>
</BaseLayout>

<style>
  .with-background::after {
    position: absolute;
    content: "";
    left: 0;
    transform: translateY(-10%);
    width: 100%;
    height: 100%;
    background: var(--bg-image-subtle-1) center top no-repeat;
    z-index: -99999;
  }

  .with-background::before {
    position: absolute;
    content: "";
    left: 0;
    transform: translateY(16%);
    width: 100%;
    height: 100%;
    background:
      var(--bg-image-subtle-2) no-repeat,
      var(--bg-image-subtle-3) top center no-repeat;
    background-position:
      top center,
      left 30%;
    z-index: -99999;
  }

  :root.dark .with-background::after {
    background-position: center top -10rem;
  }

  :root.dark .with-background::before {
    background-position: center top -10rem;
  }

  :root.dark .with-background::before {
    top: 0;
    background-position:
      top 28rem center,
      left 36%;
  }

  .mention-card {
    display: flex;
    height: 7rem;
    justify-content: center;
    align-items: center;
    text-align: center;
    border: 1px solid var(--gray-800);
    border-radius: 1.5rem;
    color: var(--gray-300);
    background: var(--gradient-subtle);
    box-shadow: var(--shadow-sm);
  }

  @media (min-width: 768px) {
    .mention-card {
      border-radius: 1.5rem;
      height: 9.5rem;
    }
  }

  @media (max-width: 768px) {
    .with-background::after {
      transform: translateY(-12%);
      background-position: center top;
    }

    .with-background::before {
      transform: translateY(-12%);
      background-position: center top;
    }

    :root.dark .with-background::after {
      background: none;
    }

    :root.dark .with-background::before {
      background: none;
    }
  }
</style>
