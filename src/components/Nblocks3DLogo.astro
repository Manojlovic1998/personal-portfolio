---

---

<!--Component Template -->
<div id="nblocks-canvas-container" class="animate"></div>
<script>
  import World from "../utils/threejs/World";
  import loadGLTFObject from "../utils/threejs/loadGLTFObject";
  import type { CameraSettings } from "../utils/threejs/createCamera";
  import matchMediaQuery from "../utils/threejs/matchMediaQuery";

  const main = async () => {
    // Get a reference to the container element
    const container = document.getElementById(
      "nblocks-canvas-container",
    ) as HTMLElement;
    const camneraSettings: CameraSettings = {
      fov: 50,
      position: { x: -2, y: 1, z: 4 },
    };

    // Crate a new World
    const world = new World(container, undefined, camneraSettings, undefined, {
      autoRotate: true,
    });

    world.init = async () => {
      // Load models
      const objectList = await loadGLTFObject([
        {
          path: `${
            import.meta.env.BASE_URL
          }assets/models/obj/nblocks/nblocks.glb`,
        },
      ]);
      // Check if the models have been loaded
      // If so add them to the scene
      if (objectList && objectList[0]) {
        const nblocks = objectList[0];
        nblocks.model.scale.set(0.01, 0.01, 0.01);
        world.scene.add(nblocks.model);
      }

      // Three.js's OrbitalControls class sets the following inline style within its constructor method
      // It is a very case specific option which interfiers with touch scroll on mobile, therefore I have wrote this script which removes it
      // based on screen size.
      // touch-action: none;

      // Enable mobile touch action
      const onMatchCallback = () => {
        const canvas = document.getElementsByClassName(
          "scene",
        )[0] as HTMLElement;
        canvas.style.touchAction = "pan-y";
      };

      const onMismatchCallback = () => {
        const canvas = document.getElementsByClassName(
          "scene",
        )[0] as HTMLElement;
        canvas.style.touchAction = "none";
      };

      const mobileTouchAction = matchMediaQuery(
        "(max-width: 768px)",
        onMatchCallback,
        onMismatchCallback,
      );
    };

    // Complete async tasks
    await world.init();

    // Start the animation loop
    world.start();
  };

  main();
</script>

<style>
  #nblocks-canvas-container {
    width: 100%;
    max-width: 100%;
    height: 23rem;
  }
</style>
